# 성 지키기
'''
[문제]
영식이는 직사각형 모양의 성을 가지고 있다. 성의 1층은 몇 명의 경비원에 의해서 보호되고 있다.
영식이는 모든 행과 모든 열에 한 명 이상의 경비원이 있으면 좋겠다고 생각했다.

성의 크기와 경비원이 어디있는지 주어졌을 때, 몇 명의 경비원을 최소로 추가해야 
영식이를 만족시키는지 구하는 프로그램을 작성하시오.

[입력]
첫째 줄에 성의 세로 크기 N과 가로 크기 M이 주어진다. N과 M은 50보다 작거나 같은 자연수이다. 
둘째 줄부터 N개의 줄에는 성의 상태가 주어진다. 성의 상태는 .은 빈칸, X는 경비원이 있는 칸이다.

[출력]
첫째 줄에 추가해야 하는 경비원의 최솟값을 출력한다.

[예제 입력 1] 
5 8
....XXXX
........
XX.X.XX.
........
........
[예제 출력 1] 
3
'''
# 행우선, 열우선 순회해서 X가 한개도 없는 행, 열을 각각 카운트 -> 더 많거나 같은 쪽을 출력
N, M = map(int, input().split())
arr = [input() for i in range(N)]
cnt_r = 0
cnt_c = 0
for r in range(N):  # 행우선 순회는 같은 리스트 or 문자열 안에 요소가 존재하므로 멤버십연산자 사용 가능
    if 'X' not in arr[r]:
        cnt_r += 1
for c in range(M):  # 열우선 순회는 서로 다른 리스트 or 문자열이라 멤버십연산자 불가능
    for r in range(N):
        if arr[r][c] == 'X':
            break
    else:
        cnt_c += 1

print(max(cnt_r, cnt_c))
