# 오목
'''
바둑판에는 19개의 가로줄과 19개의 세로줄
가로줄은 위에서부터 아래로 1번, 2번, ... ,19번의 번호가 .. => 19칸
같은 색의 바둑알이 연속적으로 다섯 알을 놓이면 그 색이 이기게 된다. 
하지만 여섯 알 이상이 연속적으로 놓인 경우에는 이긴 것이 아니다.
입력으로 바둑판의 어떤 상태가 주어졌을 때, 
검은색이 이겼는지, 흰색이 이겼는지 또는 아직 승부가 결정되지 않았는지를 판단하는 프로그램을 작성하시오. 
단, 검은색과 흰색이 동시에 이기거나 검은색 또는 흰색이 두 군데 이상에서 동시에 이기는 경우는 입력으로 들어오지 않는다.

입력: 19줄에 각 줄마다 19개의 숫자로 표현되는데, 
검은 바둑알은 1, 흰 바둑알은 2, 알이 놓이지 않는 자리는 0으로 표시되며, 
숫자는 한 칸씩 띄어서 표시된다.

0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 1 2 0 0 2 2 2 1 0 0 0 0 0 0 0 0 0 0
0 0 1 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 0 0
0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

출력: 첫줄에 검은색이 이겼을 경우에는 1을, 흰색이 이겼을 경우에는 2를, 
아직 승부가 결정되지 않았을 경우에는 0을 출력한다. 
검은색 또는 흰색이 이겼을 경우에는 둘째 줄에 연속된 다섯 개의 바둑알 중에서 
가장 왼쪽에 있는 바둑알(연속된 다섯 개의 바둑알이 세로로 놓인 경우, 그 중 가장 위에 있는 것)의 
가로줄 번호와, 세로줄 번호를 순서대로 출력한다.
1
3 2

1
5 1 
'''
# 하 우 대각선 \(하우) /(상우)
dr = [1, 0, 1, -1]
dc = [0, 1, 1, 1]

def find_five(r, c, i, num):
    Baduk = 1
    # 체크는 한번만
    if 0 <= r - dr[i] < 19 and 0 <= c - dc[i] < 19: # 인덱스 범위 체크
        if arr[r - dr[i]][c - dc[i]] == num: # 바둑알 세는 시작 위치 반대편에, 같은 바둑 알이 있으면 이미 검수한 것 or 시작점이 아님
            return 0
        
    while True:
        r += dr[i]
        c += dc[i]
        # 인덱스 범위를 벗어나지 않으면서, 
        if 0 <= r < 19 and 0 <= c < 19:
            if arr[r][c] == num: # num과 같을 때,
                Baduk += 1
                if Baduk > 5: # 이긴 것이 아니여
                    return 0
                
            else: # num과 같지 않을 때,
                if Baduk == 5: # 바둑알이 다섯 개~
                    return num # r, c는 값 변경에 사용해서 num만 return
                return 0 # 다섯 개가 아니여
        else: # 인덱스 범위를 벗어날 때, 
            if Baduk == 5: # 바둑알이 다섯 개~
                return num
            return 0 
def black_white():
    for r in range(19):
        for c in range(19):
            if arr[r][c] == 1: # black
                for i in range(4):
                    ans = find_five(r, c, i, 1)
                    if ans: # 값이 있으면
                        return ans, r, c
            if arr[r][c] == 2: # white
                for i in range(4):
                    ans = find_five(r, c, i, 2)
                    if ans: # 값이 있으면
                        return ans, r, c         
    return 0 # 다섯개가 없어

arr = [list(map(int, input().split())) for _ in range(19)]

result = black_white()
# result = black_white(arr) # arr은 전역 변수이므로 인자로 전달 안해도 된다.
if result == 0:
    print(result)
else:
    for i in range(len(result)):
        if i > 0: 
            print(result[i]+1, end=' ') # 인덱스 번호와 줄 번호가 다르기에 +1
        else: 
            print(result[i])