# 쉽게 푸는 문제
'''
수학 선행 학습
이 문제는 다음과 같다. 1을 한 번, 2를 두 번, 3을 세 번, 
이런 식으로 1 2 2 3 3 3 4 4 4 4 5 .. 
이러한 수열을 만들고 어느 일정한 구간을 주면 그 구간의 합을 구하는 것이다.

입력: 첫째 줄에 구간의 시작과 끝을 나타내는 정수 A, B(1 ≤ A ≤ B ≤ 1,000)가 주어진다. 
즉, 수열에서 A번째 숫자부터 B번째 숫자까지 합을 구하면 된다.
3 7

출력: 첫 줄에 구간에 속하는 숫자의 합을 출력한다.
15

num 1 | 2 3   4 5 6   7 8 9 10  11 12 13 14 15   16
idx 0 | 1 2 | 3 4 5 | 6 7 8 9 | 10 11 12 13 14 | 15
max 1 | 2 2 | 3 3 3 | 4 4 4 4 | 5  5  5  5  5  | 6
cha -1|-1 0 | 0 1 2 | 2 3 4 5 | 5  6  7  8  9  | 9
'''
A, B = map(int, input().split())


# 수열을 리스트에 담기
sequence = [0] * 1000

i = 0 # 인덱스 번호
j = 1 # 수열 숫자
while i < 1000: # i는 999까지
    for _ in range(j):
        sequence[i] = j
        i += 1
        if i >= 1000:
            break
    j += 1
# print(sequence)


# 리스트에서 구간의 합 구하기
# A 시작 B 끝


interval_sum = 0
for i in range(A-1, B): # 인덱스번호 = 순서-1
    interval_sum += sequence[i]

print(interval_sum)