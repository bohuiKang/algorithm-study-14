# 바구니 뒤집기
'''
바구니 총 N개
각각 1번부터 N번까지 순서대로 번호 
일렬 1, 2, ..., N
M번 바구니의 순서를 역순으로 만들려고 할때, 
순서를 역순으로 만들 범위를 정하고, 그 범위에 들어있는 순서를 역순으로 만든다.

입력: 첫째 줄에 N (1 ≤ N ≤ 100)과 M (1 ≤ M ≤ 100)이 주어진다.
둘째 줄부터 M개의 줄에는 바구니의 순서를 역순으로 만드는 방법이 주어진다. 방법은 i j로 나타내고, 왼쪽으로부터 i번째 바구니부터 j번째 바구니의 순서를 역순으로 만든다는 뜻이다. (1 ≤ i ≤ j ≤ N)
5 4
1 2
3 4
1 4
2 2

출력: 모든 순서를 바꾼 다음에, 가장 왼쪽에 있는 바구니부터 바구니에 적혀있는 순서를 공백으로 구분해 출력한다.
3 4 1 2 5
'''
N, M = map(int, input().split())

n_lst = []
for basket in range(1, N+1):
    n_lst.append(basket)

for _ in range(M):
    i, j = map(int, input().split())
    # idx:    0 1 2 3 4
    # basket: 1 2 3 4 5
    # i j: 1 3 => 0 2 (idx)
    # 위치 값을 인덱스 번호 기준으로 변경
    ii = i-1
    jj = j-1

    # 구간이 홀수면, 가운데 값은 이동x,
    # 구간이 짝수면, 모든 값이 이동,
    # r은 reverse
    for r in range((j - i + 1) // 2): # 구간의 숫자 수 // 2 => 값 변경 수
        # r값으로 인덱스 이동
        n_lst[ii + r], n_lst[jj - r] = n_lst[jj - r], n_lst[ii + r]

    # print(f'i:{i} j:{j}')
    # print(n_lst)

print(*n_lst)